{"id":"google/cloud/debugger/breakpoint/evaluator","name":"Evaluator","title":["Google","Cloud","Debugger","Breakpoint","Evaluator"],"description":"<p>Helps to evaluate program state at the location of breakpoint during\nexecuting. The program state, such as local variables and call stack,\nare retrieved using Ruby Binding objects.</p>\n\n<p>The breakpoints may consist of conditional expression and other\ncode expressions. The Evaluator helps evaluates these expression in\na read-only context. Meaning if the expressions trigger any write\noperations in middle of the evaluation, the evaluator is able to\nabort the operation and prevent the program state from being altered.</p>\n\n<p>The evaluated results are saved onto the breakpoints fields. See\n<a href=\"https://cloud.google.com/debugger/api/reference/rpc/google.devtools.clouddebugger.v2#google.devtools.clouddebugger.v2.Breakpoint\">Stackdriver Breakpoints\nDoc</a>\nfor details.</p>","source":"google-cloud-debugger/lib/google/cloud/debugger/breakpoint/evaluator.rb#L40","resources":[],"examples":[],"methods":[{"id":"eval_condition-class","type":"class","name":"eval_condition","title":["Google","Cloud","Debugger","Breakpoint","Evaluator.eval_condition"],"description":"<p>Evaluates a boolean conditional expression in the given context\nbinding. The evaluation subjects to the read-only rules. If\nthe expression does any write operation, the evaluation aborts\nand returns false.</p>","source":"google-cloud-debugger/lib/google/cloud/debugger/breakpoint/evaluator.rb#L785","resources":[],"examples":[],"params":[{"name":"binding","types":["Binding"],"description":"The binding object from the context","optional":false,"nullable":false},{"name":"condition","types":["String"],"description":"A string of code to be evaluates","optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["Boolean"],"description":"True if condition expression read-only evaluates\nto true. Otherwise false."}]}]}