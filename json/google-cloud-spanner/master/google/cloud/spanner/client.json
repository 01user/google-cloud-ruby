{"id":"google/cloud/spanner/client","name":"Client","title":["Google","Cloud","Spanner","Client"],"description":"<h1 id=\"client\">Client</h1>\n\n<p>…</p>\n\n<p>See Google::Cloud#spanner</p>","source":"google-cloud-spanner/lib/google/cloud/spanner/client.rb#L41","resources":[],"examples":[{"caption":"","code":"require \"google/cloud\"\n\ngcloud = Google::Cloud.new\nspanner = gcloud.spanner\n\n# ..."}],"methods":[{"id":"project-instance","type":"instance","name":"project","title":["Google","Cloud","Spanner","Client#project"],"description":"<p>The Spanner project connected to.</p>","source":"google-cloud-spanner/lib/google/cloud/spanner/client.rb#L54","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/cloud/spanner/project\">Project</a>"],"description":""}]},{"id":"project_id-instance","type":"instance","name":"project_id","title":["Google","Cloud","Spanner","Client#project_id"],"description":"<p>The unique identifier for the project.</p>","source":"google-cloud-spanner/lib/google/cloud/spanner/client.rb#L60","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["String"],"description":""}]},{"id":"instance_id-instance","type":"instance","name":"instance_id","title":["Google","Cloud","Spanner","Client#instance_id"],"description":"<p>The unique identifier for the instance.</p>","source":"google-cloud-spanner/lib/google/cloud/spanner/client.rb#L66","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["String"],"description":""}]},{"id":"database_id-instance","type":"instance","name":"database_id","title":["Google","Cloud","Spanner","Client#database_id"],"description":"<p>The unique identifier for the database.</p>","source":"google-cloud-spanner/lib/google/cloud/spanner/client.rb#L72","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["String"],"description":""}]},{"id":"execute-instance","type":"instance","name":"execute","title":["Google","Cloud","Spanner","Client#execute"],"description":"<p>Executes a SQL query.</p>\n\n<p>Arguments can be passed using <code>params</code>, Ruby types are mapped to\nSpanner types as follows:</p>\n\n<table class=\"table\">\n  <thead>\n    <tr>\n      <th>Spanner</th>\n      <th>Ruby</th>\n      <th>Notes</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>BOOL</code></td>\n      <td><code>true</code>/<code>false</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>INT64</code></td>\n      <td><code>Integer</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>FLOAT64</code></td>\n      <td><code>Float</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>STRING</code></td>\n      <td><code>String</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>DATE</code></td>\n      <td><code>Date</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>TIMESTAMP</code></td>\n      <td><code>Time</code>, <code>DateTime</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>BYTES</code></td>\n      <td><code>File</code>, <code>IO</code>, <code>StringIO</code>, or similar</td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>ARRAY</code></td>\n      <td><code>Array</code></td>\n      <td>Nested arrays are not supported.</td>\n    </tr>\n  </tbody>\n</table>\n\n<p>See <a href=\"https://cloud.google.com/spanner/docs/data-definition-language#data_types\">Data\ntypes</a>.</p>","source":"google-cloud-spanner/lib/google/cloud/spanner/client.rb#L158","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/spanner\"\n\nspanner = Google::Cloud::Spanner.new\n\ndb = spanner.client \"my-instance\", \"my-database\"\n\nresults = db.execute \"SELECT * FROM users\"\n\nresults.rows.each do |row|\n  puts \"User #{row[:id]} is #{row[:name]}\"\"\nend"},{"caption":"<p>Query using query parameters:</p>","code":"require \"google/cloud/spanner\"\n\nspanner = Google::Cloud::Spanner.new\n\ndb = spanner.client \"my-instance\", \"my-database\"\n\nresults = db.execute \"SELECT * FROM users WHERE active = @active\",\n                     params: { active: true }\n\nresults.rows.each do |row|\n  puts \"User #{row[:id]} is #{row[:name]}\"\"\nend"}],"params":[{"name":"sql","types":["String"],"description":"The SQL query string. See <a href=\"https://cloud.google.com/spanner/docs/query-syntax\">Query\nsyntax</a>.</p>\n\n<p>The SQL query string can contain parameter placeholders. A parameter\nplaceholder consists of “@” followed by the parameter name.\nParameter names consist of any combination of letters, numbers, and\nunderscores.","optional":false,"nullable":false},{"name":"params","types":["Hash"],"description":"SQL parameters for the query string. The\nparameter placeholders, minus the “@”, are the the hash keys, and\nthe literal values are the hash values. If the query string contains\nsomething like “WHERE id &gt; @msg_id”, then the params must contain\nsomething like <code>:msg_id -&gt; 1</code>.","optional":true,"default":"nil","nullable":true},{"name":"timestamp","types":["Time","DateTime"],"description":"Executes all reads at a\ntimestamp &gt;= +timestamp+.</p>\n\n<p>This is useful for requesting fresher data than some previous read,\nor data that is fresh enough to observe the effects of some\npreviously committed transaction whose timestamp is known.</p>\n\n<p>Cannot be used with staleness.","optional":true,"default":"nil","nullable":true},{"name":"staleness","types":["Numeric"],"description":"Read data at a timestamp &gt;= +NOW -\nmax_staleness+ seconds. Guarantees that all writes that have\ncommitted more than the specified number of seconds ago are visible.\nBecause Cloud Spanner chooses the exact timestamp, this mode works\neven if the client’s local clock is substantially skewed from Cloud\nSpanner commit timestamps.</p>\n\n<p>Useful for reading the freshest data available at a nearby replica,\nwhile bounding the possible staleness if the local replica has\nfallen behind.</p>\n\n<p>Cannot be used with timestamp.","optional":true,"default":"nil","nullable":true}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/cloud/spanner/results\">Google::Cloud::Spanner::Results</a>"],"description":""}]},{"id":"read-instance","type":"instance","name":"read","title":["Google","Cloud","Spanner","Client#read"],"description":"<p>Read rows from a database table, as a simple alternative to\n<a data-custom-type=\"google/cloud/spanner/client\" data-method=\"execute-instance\">#execute</a>.</p>","source":"google-cloud-spanner/lib/google/cloud/spanner/client.rb#L222","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/spanner\"\n\nspanner = Google::Cloud::Spanner.new\n\ndb = spanner.client \"my-instance\", \"my-database\"\n\nresults = db.read \"users\", [\"id, \"name\"]\n\nresults.rows.each do |row|\n  puts \"User #{row[:id]} is #{row[:name]}\"\"\nend"}],"params":[{"name":"table","types":["String"],"description":"The name of the table in the database to be\nread.","optional":false,"nullable":false},{"name":"columns","types":["Array<String>"],"description":"The columns of table to be returned for\neach row matching this request.","optional":false,"nullable":false},{"name":"id","types":["Object","Array<Object>"],"description":"A single, or list of keys to match\nreturned data to. Values should have exactly as many elements as\nthere are columns in the primary key.","optional":true,"default":"nil","nullable":true},{"name":"limit","types":["Integer"],"description":"If greater than zero, no more than this number\nof rows will be returned. The default is no limit.","optional":true,"default":"nil","nullable":true},{"name":"timestamp","types":["Time","DateTime"],"description":"Executes all reads at a\ntimestamp &gt;= +timestamp+.</p>\n\n<p>This is useful for requesting fresher data than some previous read,\nor data that is fresh enough to observe the effects of some\npreviously committed transaction whose timestamp is known.</p>\n\n<p>Cannot be used with staleness.","optional":true,"default":"nil","nullable":true},{"name":"staleness","types":["Numeric"],"description":"Read data at a timestamp &gt;= +NOW -\nmax_staleness+ seconds. Guarantees that all writes that have\ncommitted more than the specified number of seconds ago are visible.\nBecause Cloud Spanner chooses the exact timestamp, this mode works\neven if the client’s local clock is substantially skewed from Cloud\nSpanner commit timestamps.</p>\n\n<p>Useful for reading the freshest data available at a nearby replica,\nwhile bounding the possible staleness if the local replica has\nfallen behind.</p>\n\n<p>Cannot be used with timestamp.","optional":true,"default":"nil","nullable":true}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/cloud/spanner/results\">Google::Cloud::Spanner::Results</a>"],"description":""}]},{"id":"commit-instance","type":"instance","name":"commit","title":["Google","Cloud","Spanner","Client#commit"],"description":"<p>Creates changes to be applied to rows in the database.</p>","source":"google-cloud-spanner/lib/google/cloud/spanner/client.rb#L254","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/spanner\"\n\nspanner = Google::Cloud::Spanner.new\n\ndb = spanner.client \"my-instance\", \"my-database\"\n\ndb.commit do |c|\n  c.update \"users\", [{ id: 1, name: \"Charlie\", active: false }]\n  c.insert \"users\", [{ id: 2, name: \"Harvey\",  active: true }]\nend"}],"params":[{"name":"yield","types":["block"],"description":"The block for updating the data.","optional":true,"nullable":false},{"name":"yield.commit","types":["Google::Cloud::Spanner::Commit"],"description":"The Commit object.","optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"upsert-instance","type":"instance","name":"upsert","title":["Google","Cloud","Spanner","Client#upsert"],"description":"<p>Inserts or updates rows in a table. If any of the rows already exist,\nthen its column values are overwritten with the ones provided. Any\ncolumn values not explicitly written are preserved.</p>","source":"google-cloud-spanner/lib/google/cloud/spanner/client.rb#L294","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/spanner\"\n\nspanner = Google::Cloud::Spanner.new\n\ndb = spanner.client \"my-instance\", \"my-database\"\n\ndb.upsert \"users\", [{ id: 1, name: \"Charlie\", active: false },\n                    { id: 2, name: \"Harvey\",  active: true }]"}],"params":[{"name":"table","types":["String"],"description":"The name of the table in the database to be\nmodified.","optional":false,"nullable":false},{"name":"rows","types":["Array<Hash>"],"description":"One or more hash objects with the hash keys\nmatching the table’s columns, and the hash values matching the\ntable’s values.</p>\n\n<p>Ruby types are mapped to Spanner types as follows:</p>\n\n<table class=\"table\">\n  <thead>\n    <tr>\n      <th>Spanner</th>\n      <th>Ruby</th>\n      <th>Notes</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>BOOL</code></td>\n      <td><code>true</code>/<code>false</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>INT64</code></td>\n      <td><code>Integer</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>FLOAT64</code></td>\n      <td><code>Float</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>STRING</code></td>\n      <td><code>String</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>DATE</code></td>\n      <td><code>Date</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>TIMESTAMP</code></td>\n      <td><code>Time</code>, <code>DateTime</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>BYTES</code></td>\n      <td><code>File</code>, <code>IO</code>, <code>StringIO</code>, or similar</td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>ARRAY</code></td>\n      <td><code>Array</code></td>\n      <td>Nested arrays are not supported.</td>\n    </tr>\n  </tbody>\n</table>","optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"insert-instance","type":"instance","name":"insert","title":["Google","Cloud","Spanner","Client#insert"],"description":"<p>Inserts new rows in a table. If any of the rows already exist, the\nwrite or request fails with error <code>ALREADY_EXISTS</code>.</p>","source":"google-cloud-spanner/lib/google/cloud/spanner/client.rb#L334","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/spanner\"\n\nspanner = Google::Cloud::Spanner.new\n\ndb = spanner.client \"my-instance\", \"my-database\"\n\ndb.insert \"users\", [{ id: 1, name: \"Charlie\", active: false },\n                    { id: 2, name: \"Harvey\",  active: true }]"}],"params":[{"name":"table","types":["String"],"description":"The name of the table in the database to be\nmodified.","optional":false,"nullable":false},{"name":"rows","types":["Array<Hash>"],"description":"One or more hash objects with the hash keys\nmatching the table’s columns, and the hash values matching the\ntable’s values.</p>\n\n<p>Ruby types are mapped to Spanner types as follows:</p>\n\n<table class=\"table\">\n  <thead>\n    <tr>\n      <th>Spanner</th>\n      <th>Ruby</th>\n      <th>Notes</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>BOOL</code></td>\n      <td><code>true</code>/<code>false</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>INT64</code></td>\n      <td><code>Integer</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>FLOAT64</code></td>\n      <td><code>Float</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>STRING</code></td>\n      <td><code>String</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>DATE</code></td>\n      <td><code>Date</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>TIMESTAMP</code></td>\n      <td><code>Time</code>, <code>DateTime</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>BYTES</code></td>\n      <td><code>File</code>, <code>IO</code>, <code>StringIO</code>, or similar</td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>ARRAY</code></td>\n      <td><code>Array</code></td>\n      <td>Nested arrays are not supported.</td>\n    </tr>\n  </tbody>\n</table>","optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"update-instance","type":"instance","name":"update","title":["Google","Cloud","Spanner","Client#update"],"description":"<p>Updates existing rows in a table. If any of the rows does not already\nexist, the request fails with error <code>NOT_FOUND</code>.</p>","source":"google-cloud-spanner/lib/google/cloud/spanner/client.rb#L373","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/spanner\"\n\nspanner = Google::Cloud::Spanner.new\n\ndb = spanner.client \"my-instance\", \"my-database\"\n\ndb.update \"users\", [{ id: 1, name: \"Charlie\", active: false },\n                    { id: 2, name: \"Harvey\",  active: true }]"}],"params":[{"name":"table","types":["String"],"description":"The name of the table in the database to be\nmodified.","optional":false,"nullable":false},{"name":"rows","types":["Array<Hash>"],"description":"One or more hash objects with the hash keys\nmatching the table’s columns, and the hash values matching the\ntable’s values.</p>\n\n<p>Ruby types are mapped to Spanner types as follows:</p>\n\n<table class=\"table\">\n  <thead>\n    <tr>\n      <th>Spanner</th>\n      <th>Ruby</th>\n      <th>Notes</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>BOOL</code></td>\n      <td><code>true</code>/<code>false</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>INT64</code></td>\n      <td><code>Integer</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>FLOAT64</code></td>\n      <td><code>Float</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>STRING</code></td>\n      <td><code>String</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>DATE</code></td>\n      <td><code>Date</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>TIMESTAMP</code></td>\n      <td><code>Time</code>, <code>DateTime</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>BYTES</code></td>\n      <td><code>File</code>, <code>IO</code>, <code>StringIO</code>, or similar</td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>ARRAY</code></td>\n      <td><code>Array</code></td>\n      <td>Nested arrays are not supported.</td>\n    </tr>\n  </tbody>\n</table>","optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"replace-instance","type":"instance","name":"replace","title":["Google","Cloud","Spanner","Client#replace"],"description":"<p>Inserts or replaces rows in a table. If any of the rows already exist,\nit is deleted, and the column values provided are inserted instead.\nUnlike #upsert, this means any values not explicitly written become\n<code>NULL</code>.</p>","source":"google-cloud-spanner/lib/google/cloud/spanner/client.rb#L414","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/spanner\"\n\nspanner = Google::Cloud::Spanner.new\n\ndb = spanner.client \"my-instance\", \"my-database\"\n\ndb.replace \"users\", [{ id: 1, name: \"Charlie\", active: false },\n                     { id: 2, name: \"Harvey\",  active: true }]"}],"params":[{"name":"table","types":["String"],"description":"The name of the table in the database to be\nmodified.","optional":false,"nullable":false},{"name":"rows","types":["Array<Hash>"],"description":"One or more hash objects with the hash keys\nmatching the table’s columns, and the hash values matching the\ntable’s values.</p>\n\n<p>Ruby types are mapped to Spanner types as follows:</p>\n\n<table class=\"table\">\n  <thead>\n    <tr>\n      <th>Spanner</th>\n      <th>Ruby</th>\n      <th>Notes</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>BOOL</code></td>\n      <td><code>true</code>/<code>false</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>INT64</code></td>\n      <td><code>Integer</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>FLOAT64</code></td>\n      <td><code>Float</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>STRING</code></td>\n      <td><code>String</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>DATE</code></td>\n      <td><code>Date</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>TIMESTAMP</code></td>\n      <td><code>Time</code>, <code>DateTime</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>BYTES</code></td>\n      <td><code>File</code>, <code>IO</code>, <code>StringIO</code>, or similar</td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>ARRAY</code></td>\n      <td><code>Array</code></td>\n      <td>Nested arrays are not supported.</td>\n    </tr>\n  </tbody>\n</table>","optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"delete-instance","type":"instance","name":"delete","title":["Google","Cloud","Spanner","Client#delete"],"description":"<p>Deletes rows from a table. Succeeds whether or not the specified rows\nwere present.</p>","source":"google-cloud-spanner/lib/google/cloud/spanner/client.rb#L438","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/spanner\"\n\nspanner = Google::Cloud::Spanner.new\n\ndb = spanner.client \"my-instance\", \"my-database\"\n\ndb.delete \"users\", [1, 2, 3]"}],"params":[{"name":"table","types":["String"],"description":"The name of the table in the database to be\nmodified.","optional":false,"nullable":false},{"name":"id","types":["Array<Object>"],"description":"One or more primary keys of the rows within\ntable to delete.","optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"transaction-instance","type":"instance","name":"transaction","title":["Google","Cloud","Spanner","Client#transaction"],"description":"<p>Creates a transaction for reads and writes that execute atomically at\na single logical point in time across columns, rows, and tables in a\ndatabase.</p>","source":"google-cloud-spanner/lib/google/cloud/spanner/client.rb#L470","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/spanner\"\n\nspanner = Google::Cloud::Spanner.new\ndb = spanner.client \"my-instance\", \"my-database\"\n\ndb.transaction do |tx|\n  results = tx.execute \"SELECT * FROM users\"\n\n  results.rows.each do |row|\n    puts \"User #{row[:id]} is #{row[:name]}\"\"\n  end\nend"}],"params":[{"name":"deadline","types":["Numeric"],"description":"The total amount of time in seconds the\ntransaction has to succeed.","optional":true,"default":"120","nullable":false},{"name":"yield","types":["block"],"description":"The block for reading and writing data.","optional":true,"nullable":false},{"name":"yield.transaction","types":["Google::Cloud::Spanner::Transaction"],"description":"The\nTransaction object.","optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"snapshot-instance","type":"instance","name":"snapshot","title":["Google","Cloud","Spanner","Client#snapshot"],"description":"<p>Creates a snapshot for reads that execute atomically at a single\nlogical point in time across columns, rows, and tables in a database.</p>","source":"google-cloud-spanner/lib/google/cloud/spanner/client.rb#L546","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/spanner\"\n\nspanner = Google::Cloud::Spanner.new\ndb = spanner.client \"my-instance\", \"my-database\"\n\ndb.snapshot do |snp|\n  results = snp.execute \"SELECT * FROM users\"\n\n  results.rows.each do |row|\n    puts \"User #{row[:id]} is #{row[:name]}\"\"\n  end\nend"}],"params":[{"name":"strong","types":["true","false"],"description":"Read at a timestamp where all previously\ncommitted transactions are visible.","optional":true,"default":"nil","nullable":true},{"name":"timestamp","types":["Time","DateTime"],"description":"Executes all reads at the given\ntimestamp. Unlike other modes, reads at a specific timestamp are\nrepeatable; the same read at the same timestamp always returns the\nsame data. If the timestamp is in the future, the read will block\nuntil the specified timestamp, modulo the read’s deadline.</p>\n\n<p>Useful for large scale consistent reads such as mapreduces, or for\ncoordinating many reads against a consistent snapshot of the data.","optional":true,"default":"nil","nullable":true},{"name":"staleness","types":["Numeric"],"description":"Executes all reads at a timestamp that is\n+staleness+ old. The timestamp is chosen soon after the read\nis started.</p>\n\n<p>Guarantees that all writes that have committed more than the\nspecified number of seconds ago are visible. Because Cloud Spanner\nchooses the exact timestamp, this mode works even if the client’s\nlocal clock is substantially skewed from Cloud Spanner commit\ntimestamps.</p>\n\n<p>Useful for reading at nearby replicas without the distributed\ntimestamp negotiation overhead of single-use +staleness+.","optional":true,"default":"nil","nullable":true},{"name":"yield","types":["block"],"description":"The block for reading and writing data.","optional":true,"nullable":false},{"name":"yield.snapshot","types":["Google::Cloud::Spanner::Snapshot"],"description":"The Snapshot\nobject.","optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"close-instance","type":"instance","name":"close","title":["Google","Cloud","Spanner","Client#close"],"description":"<p>Closes the client connection and releases resources.</p>","source":"google-cloud-spanner/lib/google/cloud/spanner/client.rb#L563","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[]}]}