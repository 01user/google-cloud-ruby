{"id":"google/cloud/spanner/client","name":"Client","title":["Google","Cloud","Spanner","Client"],"description":"<h1 id=\"client\">Client</h1>\n\n<p>A client is used to read and/or modify data in a Cloud Spanner database.</p>\n\n<p>See Google::Cloud::Spanner::Project#client.</p>","source":"google-cloud-spanner/lib/google/cloud/spanner/client.rb#L51","resources":[],"examples":[{"caption":"","code":"require \"google/cloud\"\n\nspanner = Google::Cloud::Spanner.new\n\ndb = spanner.client \"my-instance\", \"my-database\"\n\ndb.transaction do |tx|\n  results = tx.execute \"SELECT * FROM users\"\n\n  results.rows.each do |row|\n    puts \"User #{row[:id]} is #{row[:name]}\"\"\n  end\nend"}],"methods":[{"id":"project_id-instance","type":"instance","name":"project_id","title":["Google","Cloud","Spanner","Client#project_id"],"description":"<p>The unique identifier for the project.</p>","source":"google-cloud-spanner/lib/google/cloud/spanner/client.rb#L64","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["String"],"description":""}]},{"id":"instance_id-instance","type":"instance","name":"instance_id","title":["Google","Cloud","Spanner","Client#instance_id"],"description":"<p>The unique identifier for the instance.</p>","source":"google-cloud-spanner/lib/google/cloud/spanner/client.rb#L70","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["String"],"description":""}]},{"id":"database_id-instance","type":"instance","name":"database_id","title":["Google","Cloud","Spanner","Client#database_id"],"description":"<p>The unique identifier for the database.</p>","source":"google-cloud-spanner/lib/google/cloud/spanner/client.rb#L76","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["String"],"description":""}]},{"id":"project-instance","type":"instance","name":"project","title":["Google","Cloud","Spanner","Client#project"],"description":"<p>The Spanner project connected to.</p>","source":"google-cloud-spanner/lib/google/cloud/spanner/client.rb#L82","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/cloud/spanner/project\">Project</a>"],"description":""}]},{"id":"instance-instance","type":"instance","name":"instance","title":["Google","Cloud","Spanner","Client#instance"],"description":"<p>The Spanner instance connected to.</p>","source":"google-cloud-spanner/lib/google/cloud/spanner/client.rb#L88","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/cloud/spanner/instance\">Instance</a>"],"description":""}]},{"id":"database-instance","type":"instance","name":"database","title":["Google","Cloud","Spanner","Client#database"],"description":"<p>The Spanner database connected to.</p>","source":"google-cloud-spanner/lib/google/cloud/spanner/client.rb#L94","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/cloud/spanner/database\">Database</a>"],"description":""}]},{"id":"execute-instance","type":"instance","name":"execute","title":["Google","Cloud","Spanner","Client#execute"],"description":"<p>Executes a SQL query.</p>\n\n<p>Arguments can be passed using <code>params</code>, Ruby types are mapped to\nSpanner types as follows:</p>\n\n<table class=\"table\">\n  <thead>\n    <tr>\n      <th>Spanner</th>\n      <th>Ruby</th>\n      <th>Notes</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>BOOL</code></td>\n      <td><code>true</code>/<code>false</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>INT64</code></td>\n      <td><code>Integer</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>FLOAT64</code></td>\n      <td><code>Float</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>STRING</code></td>\n      <td><code>String</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>DATE</code></td>\n      <td><code>Date</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>TIMESTAMP</code></td>\n      <td><code>Time</code>, <code>DateTime</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>BYTES</code></td>\n      <td><code>File</code>, <code>IO</code>, <code>StringIO</code>, or similar</td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>ARRAY</code></td>\n      <td><code>Array</code></td>\n      <td>Nested arrays are not supported.</td>\n    </tr>\n  </tbody>\n</table>\n\n<p>See <a href=\"https://cloud.google.com/spanner/docs/data-definition-language#data_types\">Data\ntypes</a>.</p>","source":"google-cloud-spanner/lib/google/cloud/spanner/client.rb#L236","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/spanner\"\n\nspanner = Google::Cloud::Spanner.new\n\ndb = spanner.client \"my-instance\", \"my-database\"\n\nresults = db.execute \"SELECT * FROM users\"\n\nresults.rows.each do |row|\n  puts \"User #{row[:id]} is #{row[:name]}\"\"\nend"},{"caption":"<p>Query using query parameters:</p>","code":"require \"google/cloud/spanner\"\n\nspanner = Google::Cloud::Spanner.new\n\ndb = spanner.client \"my-instance\", \"my-database\"\n\nresults = db.execute \"SELECT * FROM users WHERE active = @active\",\n                     params: { active: true }\n\nresults.rows.each do |row|\n  puts \"User #{row[:id]} is #{row[:name]}\"\"\nend"}],"params":[{"name":"sql","types":["String"],"description":"The SQL query string. See <a href=\"https://cloud.google.com/spanner/docs/query-syntax\">Query\nsyntax</a>.</p>\n\n<p>The SQL query string can contain parameter placeholders. A parameter\nplaceholder consists of “@” followed by the parameter name.\nParameter names consist of any combination of letters, numbers, and\nunderscores.","optional":false,"nullable":false},{"name":"params","types":["Hash"],"description":"SQL parameters for the query string. The\nparameter placeholders, minus the “@”, are the the hash keys, and\nthe literal values are the hash values. If the query string contains\nsomething like “WHERE id &gt; @msg_id”, then the params must contain\nsomething like <code>:msg_id =&gt; 1</code>.","optional":true,"default":"nil","nullable":true},{"name":"types","types":["Hash"],"description":"Types of the SQL parameters in <code>params</code>. It is not\nalways possible for Cloud Spanner to infer the right SQL type from a\nvalue in <code>params</code>. In these cases, the <code>types</code> hash can be used to\nspecify the exact SQL type for some or all of the SQL query\nparameters.</p>\n\n<p>The keys of the hash should be query string parameter placeholders,\nminus the “@”. The values of the hash should be Cloud Spanner type\ncodes from the following list:</p>\n\n<ul>\n  <li><code>:BOOL</code></li>\n  <li><code>:BYTES</code></li>\n  <li><code>:DATE</code></li>\n  <li><code>:FLOAT64</code></li>\n  <li><code>:INT64</code></li>\n  <li><code>:STRING</code></li>\n  <li><code>:TIMESTAMP</code></li>\n</ul>\n\n<p>Arrays are specified by providing the type code in an array. For\nexample, an array of integers are specified as <code>[:INT64]</code>.</p>\n\n<p>Structs are not yet supported in query parameters.</p>\n\n<p>Types are optional.","optional":true,"default":"nil","nullable":true},{"name":"single_use","types":["Hash"],"description":"Perform the read with a single-use snapshot\n(read-only transaction). (See\n<a href=\"https://cloud.google.com/spanner/docs/reference/rpc/google.spanner.v1#transactionoptions\">TransactionOptions</a>.)\nThe snapshot can be created by providing exactly one of the\nfollowing options in the hash:</p>\n\n<ul>\n  <li><strong>Strong</strong>\n    <ul>\n      <li><code>:strong</code> (true, false) Read at a timestamp where all previously\ncommitted transactions are visible.</li>\n    </ul>\n  </li>\n  <li><strong>Exact</strong>\n    <ul>\n      <li>\n        <p><code>:timestamp</code>/<code>:read_timestamp</code> (Time, DateTime) Executes all\nreads at the given timestamp. Unlike other modes, reads at a\nspecific timestamp are repeatable; the same read at the same\ntimestamp always returns the same data. If the timestamp is in\nthe future, the read will block until the specified timestamp,\nmodulo the read’s deadline.</p>\n\n        <p>Useful for large scale consistent reads such as mapreduces, or\nfor coordinating many reads against a consistent snapshot of the\ndata.</p>\n      </li>\n      <li>\n        <p><code>:staleness</code>/<code>:exact_staleness</code> (Numeric) Executes all reads at\na timestamp that is exactly the number of seconds provided old.\nThe timestamp is chosen soon after the read is started.</p>\n\n        <p>Guarantees that all writes that have committed more than the\nspecified number of seconds ago are visible. Because Cloud\nSpanner chooses the exact timestamp, this mode works even if the\nclient’s local clock is substantially skewed from Cloud Spanner\ncommit timestamps.</p>\n\n        <p>Useful for reading at nearby replicas without the distributed\ntimestamp negotiation overhead of single-use\n<code>bounded_staleness</code>.</p>\n      </li>\n    </ul>\n  </li>\n  <li><strong>Bounded</strong>\n    <ul>\n      <li>\n        <p><code>:bounded_timestamp</code>/<code>:min_read_timestamp</code> (Time, DateTime)\nExecutes all reads at a timestamp greater than the value\nprovided.</p>\n\n        <p>This is useful for requesting fresher data than some previous\nread, or data that is fresh enough to observe the effects of\nsome previously committed transaction whose timestamp is known.</p>\n      </li>\n      <li>\n        <p><code>:bounded_staleness</code>/<code>:max_staleness</code> (Numeric) Read data at a\ntimestamp greater than or equal to the number of seconds\nprovided. Guarantees that all writes that have committed more\nthan the specified number of seconds ago are visible. Because\nCloud Spanner chooses the exact timestamp, this mode works even\nif the client’s local clock is substantially skewed from Cloud\nSpanner commit timestamps.</p>\n\n        <p>Useful for reading the freshest data available at a nearby\nreplica, while bounding the possible staleness if the local\nreplica has fallen behind.</p>\n      </li>\n    </ul>\n  </li>\n</ul>","optional":true,"default":"nil","nullable":true}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/cloud/spanner/results\">Google::Cloud::Spanner::Results</a>"],"description":"the query results"}]},{"id":"read-instance","type":"instance","name":"read","title":["Google","Cloud","Spanner","Client#read"],"description":"<p>Read rows from a database table, as a simple alternative to\n<a data-custom-type=\"google/cloud/spanner/client\" data-method=\"execute-instance\">#execute</a>.</p>","source":"google-cloud-spanner/lib/google/cloud/spanner/client.rb#L334","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/spanner\"\n\nspanner = Google::Cloud::Spanner.new\n\ndb = spanner.client \"my-instance\", \"my-database\"\n\nresults = db.read \"users\", [\"id, \"name\"]\n\nresults.rows.each do |row|\n  puts \"User #{row[:id]} is #{row[:name]}\"\"\nend"}],"params":[{"name":"table","types":["String"],"description":"The name of the table in the database to be\nread.","optional":false,"nullable":false},{"name":"columns","types":["Array<String>"],"description":"The columns of table to be returned for\neach row matching this request.","optional":false,"nullable":false},{"name":"keys","types":["Object","Array<Object>"],"description":"A single, or list of keys or key\nranges to match returned data to. Values should have exactly as many\nelements as there are columns in the primary key.","optional":true,"default":"nil","nullable":true},{"name":"index","types":["String"],"description":"The name of an index to use instead of the\ntable’s primary key when interpreting <code>id</code> and sorting result rows.\nOptional.","optional":true,"default":"nil","nullable":true},{"name":"limit","types":["Integer"],"description":"If greater than zero, no more than this number\nof rows will be returned. The default is no limit.","optional":true,"default":"nil","nullable":true},{"name":"single_use","types":["Hash"],"description":"Perform the read with a single-use snapshot\n(read-only transaction). (See\n<a href=\"https://cloud.google.com/spanner/docs/reference/rpc/google.spanner.v1#transactionoptions\">TransactionOptions</a>.)\nThe snapshot can be created by providing exactly one of the\nfollowing options in the hash:</p>\n\n<ul>\n  <li><strong>Strong</strong>\n    <ul>\n      <li><code>:strong</code> (true, false) Read at a timestamp where all previously\ncommitted transactions are visible.</li>\n    </ul>\n  </li>\n  <li><strong>Exact</strong>\n    <ul>\n      <li>\n        <p><code>:timestamp</code>/<code>:read_timestamp</code> (Time, DateTime) Executes all\nreads at the given timestamp. Unlike other modes, reads at a\nspecific timestamp are repeatable; the same read at the same\ntimestamp always returns the same data. If the timestamp is in\nthe future, the read will block until the specified timestamp,\nmodulo the read’s deadline.</p>\n\n        <p>Useful for large scale consistent reads such as mapreduces, or\nfor coordinating many reads against a consistent snapshot of the\ndata.</p>\n      </li>\n      <li>\n        <p><code>:staleness</code>/<code>:exact_staleness</code> (Numeric) Executes all reads at\na timestamp that is exactly the number of seconds provided old.\nThe timestamp is chosen soon after the read is started.</p>\n\n        <p>Guarantees that all writes that have committed more than the\nspecified number of seconds ago are visible. Because Cloud\nSpanner chooses the exact timestamp, this mode works even if the\nclient’s local clock is substantially skewed from Cloud Spanner\ncommit timestamps.</p>\n\n        <p>Useful for reading at nearby replicas without the distributed\ntimestamp negotiation overhead of single-use\n<code>bounded_staleness</code>.</p>\n      </li>\n    </ul>\n  </li>\n  <li><strong>Bounded</strong>\n    <ul>\n      <li>\n        <p><code>:bounded_timestamp</code>/<code>:min_read_timestamp</code> (Time, DateTime)\nExecutes all reads at a timestamp greater than the value\nprovided.</p>\n\n        <p>This is useful for requesting fresher data than some previous\nread, or data that is fresh enough to observe the effects of\nsome previously committed transaction whose timestamp is known.</p>\n      </li>\n      <li>\n        <p><code>:bounded_staleness</code>/<code>:max_staleness</code> (Numeric) Read data at a\ntimestamp greater than or equal to the number of seconds\nprovided. Guarantees that all writes that have committed more\nthan the specified number of seconds ago are visible. Because\nCloud Spanner chooses the exact timestamp, this mode works even\nif the client’s local clock is substantially skewed from Cloud\nSpanner commit timestamps.</p>\n\n        <p>Useful for reading the freshest data available at a nearby\nreplica, while bounding the possible staleness if the local\nreplica has fallen behind.</p>\n      </li>\n    </ul>\n  </li>\n</ul>","optional":true,"default":"nil","nullable":true}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/cloud/spanner/results\">Google::Cloud::Spanner::Results</a>"],"description":"The results of the read."}]},{"id":"commit-instance","type":"instance","name":"commit","title":["Google","Cloud","Spanner","Client#commit"],"description":"<p>Creates and commits a transaction for writes that execute atomically\nat a single logical point in time across columns, rows, and tables in\na database.</p>\n\n<p>Unlike <a data-custom-type=\"google/cloud/spanner/client\" data-method=\"transaction-instance\">#transaction</a>, which can also perform reads, this operation\naccepts only mutations and makes a single API request.</p>","source":"google-cloud-spanner/lib/google/cloud/spanner/client.rb#L372","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/spanner\"\n\nspanner = Google::Cloud::Spanner.new\n\ndb = spanner.client \"my-instance\", \"my-database\"\n\ndb.commit do |c|\n  c.update \"users\", [{ id: 1, name: \"Charlie\", active: false }]\n  c.insert \"users\", [{ id: 2, name: \"Harvey\",  active: true }]\nend"}],"params":[{"name":"yield","types":["block"],"description":"The block for mutating the data.","optional":true,"nullable":false},{"name":"yield.commit","types":["Google::Cloud::Spanner::Commit"],"description":"The Commit object.","optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"upsert-instance","type":"instance","name":"upsert","title":["Google","Cloud","Spanner","Client#upsert"],"description":"<p>Inserts or updates rows in a table. If any of the rows already exist,\nthen its column values are overwritten with the ones provided. Any\ncolumn values not explicitly written are preserved.</p>","source":"google-cloud-spanner/lib/google/cloud/spanner/client.rb#L415","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/spanner\"\n\nspanner = Google::Cloud::Spanner.new\n\ndb = spanner.client \"my-instance\", \"my-database\"\n\ndb.upsert \"users\", [{ id: 1, name: \"Charlie\", active: false },\n                    { id: 2, name: \"Harvey\",  active: true }]"}],"params":[{"name":"table","types":["String"],"description":"The name of the table in the database to be\nmodified.","optional":false,"nullable":false},{"name":"rows","types":["Array<Hash>"],"description":"One or more hash objects with the hash keys\nmatching the table’s columns, and the hash values matching the\ntable’s values.</p>\n\n<p>Ruby types are mapped to Spanner types as follows:</p>\n\n<table class=\"table\">\n  <thead>\n    <tr>\n      <th>Spanner</th>\n      <th>Ruby</th>\n      <th>Notes</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>BOOL</code></td>\n      <td><code>true</code>/<code>false</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>INT64</code></td>\n      <td><code>Integer</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>FLOAT64</code></td>\n      <td><code>Float</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>STRING</code></td>\n      <td><code>String</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>DATE</code></td>\n      <td><code>Date</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>TIMESTAMP</code></td>\n      <td><code>Time</code>, <code>DateTime</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>BYTES</code></td>\n      <td><code>File</code>, <code>IO</code>, <code>StringIO</code>, or similar</td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>ARRAY</code></td>\n      <td><code>Array</code></td>\n      <td>Nested arrays are not supported.</td>\n    </tr>\n  </tbody>\n</table>\n\n<p>See <a href=\"https://cloud.google.com/spanner/docs/data-definition-language#data_types\">Data\ntypes</a>.","optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"insert-instance","type":"instance","name":"insert","title":["Google","Cloud","Spanner","Client#insert"],"description":"<p>Inserts new rows in a table. If any of the rows already exist, the\nwrite or request fails with error <code>ALREADY_EXISTS</code>.</p>","source":"google-cloud-spanner/lib/google/cloud/spanner/client.rb#L458","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/spanner\"\n\nspanner = Google::Cloud::Spanner.new\n\ndb = spanner.client \"my-instance\", \"my-database\"\n\ndb.insert \"users\", [{ id: 1, name: \"Charlie\", active: false },\n                    { id: 2, name: \"Harvey\",  active: true }]"}],"params":[{"name":"table","types":["String"],"description":"The name of the table in the database to be\nmodified.","optional":false,"nullable":false},{"name":"rows","types":["Array<Hash>"],"description":"One or more hash objects with the hash keys\nmatching the table’s columns, and the hash values matching the\ntable’s values.</p>\n\n<p>Ruby types are mapped to Spanner types as follows:</p>\n\n<table class=\"table\">\n  <thead>\n    <tr>\n      <th>Spanner</th>\n      <th>Ruby</th>\n      <th>Notes</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>BOOL</code></td>\n      <td><code>true</code>/<code>false</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>INT64</code></td>\n      <td><code>Integer</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>FLOAT64</code></td>\n      <td><code>Float</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>STRING</code></td>\n      <td><code>String</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>DATE</code></td>\n      <td><code>Date</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>TIMESTAMP</code></td>\n      <td><code>Time</code>, <code>DateTime</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>BYTES</code></td>\n      <td><code>File</code>, <code>IO</code>, <code>StringIO</code>, or similar</td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>ARRAY</code></td>\n      <td><code>Array</code></td>\n      <td>Nested arrays are not supported.</td>\n    </tr>\n  </tbody>\n</table>\n\n<p>See <a href=\"https://cloud.google.com/spanner/docs/data-definition-language#data_types\">Data\ntypes</a>.","optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"update-instance","type":"instance","name":"update","title":["Google","Cloud","Spanner","Client#update"],"description":"<p>Updates existing rows in a table. If any of the rows does not already\nexist, the request fails with error <code>NOT_FOUND</code>.</p>","source":"google-cloud-spanner/lib/google/cloud/spanner/client.rb#L500","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/spanner\"\n\nspanner = Google::Cloud::Spanner.new\n\ndb = spanner.client \"my-instance\", \"my-database\"\n\ndb.update \"users\", [{ id: 1, name: \"Charlie\", active: false },\n                    { id: 2, name: \"Harvey\",  active: true }]"}],"params":[{"name":"table","types":["String"],"description":"The name of the table in the database to be\nmodified.","optional":false,"nullable":false},{"name":"rows","types":["Array<Hash>"],"description":"One or more hash objects with the hash keys\nmatching the table’s columns, and the hash values matching the\ntable’s values.</p>\n\n<p>Ruby types are mapped to Spanner types as follows:</p>\n\n<table class=\"table\">\n  <thead>\n    <tr>\n      <th>Spanner</th>\n      <th>Ruby</th>\n      <th>Notes</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>BOOL</code></td>\n      <td><code>true</code>/<code>false</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>INT64</code></td>\n      <td><code>Integer</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>FLOAT64</code></td>\n      <td><code>Float</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>STRING</code></td>\n      <td><code>String</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>DATE</code></td>\n      <td><code>Date</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>TIMESTAMP</code></td>\n      <td><code>Time</code>, <code>DateTime</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>BYTES</code></td>\n      <td><code>File</code>, <code>IO</code>, <code>StringIO</code>, or similar</td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>ARRAY</code></td>\n      <td><code>Array</code></td>\n      <td>Nested arrays are not supported.</td>\n    </tr>\n  </tbody>\n</table>\n\n<p>See <a href=\"https://cloud.google.com/spanner/docs/data-definition-language#data_types\">Data\ntypes</a>.","optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"replace-instance","type":"instance","name":"replace","title":["Google","Cloud","Spanner","Client#replace"],"description":"<p>Inserts or replaces rows in a table. If any of the rows already exist,\nit is deleted, and the column values provided are inserted instead.\nUnlike #upsert, this means any values not explicitly written become\n<code>NULL</code>.</p>","source":"google-cloud-spanner/lib/google/cloud/spanner/client.rb#L544","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/spanner\"\n\nspanner = Google::Cloud::Spanner.new\n\ndb = spanner.client \"my-instance\", \"my-database\"\n\ndb.replace \"users\", [{ id: 1, name: \"Charlie\", active: false },\n                     { id: 2, name: \"Harvey\",  active: true }]"}],"params":[{"name":"table","types":["String"],"description":"The name of the table in the database to be\nmodified.","optional":false,"nullable":false},{"name":"rows","types":["Array<Hash>"],"description":"One or more hash objects with the hash keys\nmatching the table’s columns, and the hash values matching the\ntable’s values.</p>\n\n<p>Ruby types are mapped to Spanner types as follows:</p>\n\n<table class=\"table\">\n  <thead>\n    <tr>\n      <th>Spanner</th>\n      <th>Ruby</th>\n      <th>Notes</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>BOOL</code></td>\n      <td><code>true</code>/<code>false</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>INT64</code></td>\n      <td><code>Integer</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>FLOAT64</code></td>\n      <td><code>Float</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>STRING</code></td>\n      <td><code>String</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>DATE</code></td>\n      <td><code>Date</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>TIMESTAMP</code></td>\n      <td><code>Time</code>, <code>DateTime</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>BYTES</code></td>\n      <td><code>File</code>, <code>IO</code>, <code>StringIO</code>, or similar</td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>ARRAY</code></td>\n      <td><code>Array</code></td>\n      <td>Nested arrays are not supported.</td>\n    </tr>\n  </tbody>\n</table>\n\n<p>See <a href=\"https://cloud.google.com/spanner/docs/data-definition-language#data_types\">Data\ntypes</a>.","optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"delete-instance","type":"instance","name":"delete","title":["Google","Cloud","Spanner","Client#delete"],"description":"<p>Deletes rows from a table. Succeeds whether or not the specified rows\nwere present.</p>","source":"google-cloud-spanner/lib/google/cloud/spanner/client.rb#L569","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/spanner\"\n\nspanner = Google::Cloud::Spanner.new\n\ndb = spanner.client \"my-instance\", \"my-database\"\n\ndb.delete \"users\", [1, 2, 3]"}],"params":[{"name":"table","types":["String"],"description":"The name of the table in the database to be\nmodified.","optional":false,"nullable":false},{"name":"keys","types":["Object","Array<Object>"],"description":"A single, or list of keys or key\nranges to match returned data to. Values should have exactly as many\nelements as there are columns in the primary key.","optional":true,"default":"[]","nullable":false}],"exceptions":[],"returns":[]},{"id":"transaction-instance","type":"instance","name":"transaction","title":["Google","Cloud","Spanner","Client#transaction"],"description":"<p>Creates a transaction for reads and writes that execute atomically at\na single logical point in time across columns, rows, and tables in a\ndatabase.</p>\n\n<p>Unlike <a data-custom-type=\"google/cloud/spanner/client\" data-method=\"commit-instance\">#commit</a>, which does not allow reads, this operation\nmakes separate API requests to begin and commit the transaction.</p>","source":"google-cloud-spanner/lib/google/cloud/spanner/client.rb#L604","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/spanner\"\n\nspanner = Google::Cloud::Spanner.new\ndb = spanner.client \"my-instance\", \"my-database\"\n\ndb.transaction do |tx|\n  results = tx.execute \"SELECT * FROM users\"\n\n  results.rows.each do |row|\n    puts \"User #{row[:id]} is #{row[:name]}\"\"\n  end\nend"}],"params":[{"name":"deadline","types":["Numeric"],"description":"The total amount of time in seconds the\ntransaction has to succeed.","optional":true,"default":"120","nullable":false},{"name":"yield","types":["block"],"description":"The block for reading and writing data.","optional":true,"nullable":false},{"name":"yield.transaction","types":["Google::Cloud::Spanner::Transaction"],"description":"The\nTransaction object.","optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"snapshot-instance","type":"instance","name":"snapshot","title":["Google","Cloud","Spanner","Client#snapshot"],"description":"<p>Creates a snapshot read-only transaction for reads that execute\natomically at a single logical point in time across columns, rows, and\ntables in a database. For transactions that only read, snapshot\nread-only transactions provide simpler semantics and are almost always\nfaster than read-write transactions.</p>","source":"google-cloud-spanner/lib/google/cloud/spanner/client.rb#L688","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/spanner\"\n\nspanner = Google::Cloud::Spanner.new\ndb = spanner.client \"my-instance\", \"my-database\"\n\ndb.snapshot do |snp|\n  results = snp.execute \"SELECT * FROM users\"\n\n  results.rows.each do |row|\n    puts \"User #{row[:id]} is #{row[:name]}\"\"\n  end\nend"}],"params":[{"name":"strong","types":["true","false"],"description":"Read at a timestamp where all previously\ncommitted transactions are visible.","optional":true,"default":"nil","nullable":true},{"name":"timestamp","types":["Time","DateTime"],"description":"Executes all reads at the given\ntimestamp. Unlike other modes, reads at a specific timestamp are\nrepeatable; the same read at the same timestamp always returns the\nsame data. If the timestamp is in the future, the read will block\nuntil the specified timestamp, modulo the read’s deadline.</p>\n\n<p>Useful for large scale consistent reads such as mapreduces, or for\ncoordinating many reads against a consistent snapshot of the data.\n(See\n<a href=\"https://cloud.google.com/spanner/docs/reference/rpc/google.spanner.v1#transactionoptions\">TransactionOptions</a>.)","optional":true,"default":"nil","nullable":true},{"name":"read_timestamp","types":["Time","DateTime"],"description":"Same as <code>timestamp</code>.","optional":true,"default":"nil","nullable":true},{"name":"staleness","types":["Numeric"],"description":"Executes all reads at a timestamp that is\n+staleness+ old. The timestamp is chosen soon after the read\nis started.</p>\n\n<p>Guarantees that all writes that have committed more than the\nspecified number of seconds ago are visible. Because Cloud Spanner\nchooses the exact timestamp, this mode works even if the client’s\nlocal clock is substantially skewed from Cloud Spanner commit\ntimestamps.</p>\n\n<p>Useful for reading at nearby replicas without the distributed\ntimestamp negotiation overhead of single-use +staleness+. (See\n<a href=\"https://cloud.google.com/spanner/docs/reference/rpc/google.spanner.v1#transactionoptions\">TransactionOptions</a>.)","optional":true,"default":"nil","nullable":true},{"name":"exact_staleness","types":["Numeric"],"description":"Same as <code>staleness</code>.","optional":true,"default":"nil","nullable":true},{"name":"yield","types":["block"],"description":"The block for reading and writing data.","optional":true,"nullable":false},{"name":"yield.snapshot","types":["Google::Cloud::Spanner::Snapshot"],"description":"The Snapshot\nobject.","optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"range-instance","type":"instance","name":"range","title":["Google","Cloud","Spanner","Client#range"],"description":"<p>Creates a Spanner Range. This can be used in place of a Ruby Range\nwhen needing to exclude the beginning value.</p>\n\n<p>beginning value. Default is <code>false</code>.\nending value. Default is <code>false</code>.</p>","source":"google-cloud-spanner/lib/google/cloud/spanner/client.rb#L783","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/spanner\"\n\nspanner = Google::Cloud::Spanner.new\n\ndb = spanner.client \"my-instance\", \"my-database\"\n\nkey_range = db.range 1, 100\nresults = db.read \"users\", [\"id, \"name\"], keys: key_range\n\nresults.rows.each do |row|\n  puts \"User #{row[:id]} is #{row[:name]}\"\"\nend"}],"params":[{"name":"beginning","types":["Object"],"description":"The object that defines the beginning of the\nrange.","optional":false,"nullable":false},{"name":"ending","types":["Object"],"description":"The object that defines the end of the range.","optional":false,"nullable":false},{"name":"exclude_begin","types":["Boolean"],"description":"Determines if the range excludes its","optional":true,"default":"false","nullable":false},{"name":"exclude_end","types":["Boolean"],"description":"Determines if the range excludes its","optional":true,"default":"false","nullable":false}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/cloud/spanner/range\">Google::Cloud::Spanner::Range</a>"],"description":""}]},{"id":"close-instance","type":"instance","name":"close","title":["Google","Cloud","Spanner","Client#close"],"description":"<p>Closes the client connection and releases resources.</p>","source":"google-cloud-spanner/lib/google/cloud/spanner/client.rb#L792","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[]}]}