{"id":"google/cloud/spanner/commit","name":"Commit","title":["Google","Cloud","Spanner","Commit"],"description":"<h1 id=\"commit\">Commit</h1>\n\n<p>Creates changes to be applied to rows in the database.</p>","source":"google-cloud-spanner/lib/google/cloud/spanner/commit.rb#L38","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/spanner\"\n\nspanner = Google::Cloud::Spanner.new\n\ndb = spanner.client \"my-instance\", \"my-database\"\n\ndb.commit do |c|\n  c.update \"users\", [{ id: 1, name: \"Charlie\", active: false }]\n  c.insert \"users\", [{ id: 2, name: \"Harvey\",  active: true }]\nend"}],"methods":[{"id":"upsert-instance","type":"instance","name":"upsert","title":["Google","Cloud","Spanner","Commit#upsert"],"description":"<p>Inserts or updates rows in a table. If any of the rows already exist,\nthen its column values are overwritten with the ones provided. Any\ncolumn values not explicitly written are preserved.</p>","source":"google-cloud-spanner/lib/google/cloud/spanner/commit.rb#L81","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/spanner\"\n\nspanner = Google::Cloud::Spanner.new\n\ndb = spanner.client \"my-instance\", \"my-database\"\n\ndb.commit do |c|\n  c.upsert \"users\", [{ id: 1, name: \"Charlie\", active: false },\n                     { id: 2, name: \"Harvey\",  active: true }]\nend"}],"params":[{"name":"table","types":["String"],"description":"The name of the table in the database to be\nmodified.","optional":false,"nullable":false},{"name":"rows","types":["Array<Hash>"],"description":"One or more hash objects with the hash keys\nmatching the table’s columns, and the hash values matching the\ntable’s values.</p>\n\n<p>Ruby types are mapped to Spanner types as follows:</p>\n\n<table class=\"table\">\n  <thead>\n    <tr>\n      <th>Spanner</th>\n      <th>Ruby</th>\n      <th>Notes</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>BOOL</code></td>\n      <td><code>true</code>/<code>false</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>INT64</code></td>\n      <td><code>Integer</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>FLOAT64</code></td>\n      <td><code>Float</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>STRING</code></td>\n      <td><code>String</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>DATE</code></td>\n      <td><code>Date</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>TIMESTAMP</code></td>\n      <td><code>Time</code>, <code>DateTime</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>BYTES</code></td>\n      <td><code>File</code>, <code>IO</code>, <code>StringIO</code>, or similar</td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>ARRAY</code></td>\n      <td><code>Array</code></td>\n      <td>Nested arrays are not supported.</td>\n    </tr>\n  </tbody>\n</table>","optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"insert-instance","type":"instance","name":"insert","title":["Google","Cloud","Spanner","Commit#insert"],"description":"<p>Inserts new rows in a table. If any of the rows already exist, the\nwrite or request fails with error <code>ALREADY_EXISTS</code>.</p>","source":"google-cloud-spanner/lib/google/cloud/spanner/commit.rb#L133","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/spanner\"\n\nspanner = Google::Cloud::Spanner.new\n\ndb = spanner.client \"my-instance\", \"my-database\"\n\ndb.commit do |c|\n  c.insert \"users\", [{ id: 1, name: \"Charlie\", active: false },\n                     { id: 2, name: \"Harvey\",  active: true }]\nend"}],"params":[{"name":"table","types":["String"],"description":"The name of the table in the database to be\nmodified.","optional":false,"nullable":false},{"name":"rows","types":["Array<Hash>"],"description":"One or more hash objects with the hash keys\nmatching the table’s columns, and the hash values matching the\ntable’s values.</p>\n\n<p>Ruby types are mapped to Spanner types as follows:</p>\n\n<table class=\"table\">\n  <thead>\n    <tr>\n      <th>Spanner</th>\n      <th>Ruby</th>\n      <th>Notes</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>BOOL</code></td>\n      <td><code>true</code>/<code>false</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>INT64</code></td>\n      <td><code>Integer</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>FLOAT64</code></td>\n      <td><code>Float</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>STRING</code></td>\n      <td><code>String</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>DATE</code></td>\n      <td><code>Date</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>TIMESTAMP</code></td>\n      <td><code>Time</code>, <code>DateTime</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>BYTES</code></td>\n      <td><code>File</code>, <code>IO</code>, <code>StringIO</code>, or similar</td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>ARRAY</code></td>\n      <td><code>Array</code></td>\n      <td>Nested arrays are not supported.</td>\n    </tr>\n  </tbody>\n</table>","optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"update-instance","type":"instance","name":"update","title":["Google","Cloud","Spanner","Commit#update"],"description":"<p>Updates existing rows in a table. If any of the rows does not already\nexist, the request fails with error <code>NOT_FOUND</code>.</p>","source":"google-cloud-spanner/lib/google/cloud/spanner/commit.rb#L184","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/spanner\"\n\nspanner = Google::Cloud::Spanner.new\n\ndb = spanner.client \"my-instance\", \"my-database\"\n\ndb.commit do |c|\n  c.update \"users\", [{ id: 1, name: \"Charlie\", active: false },\n                     { id: 2, name: \"Harvey\",  active: true }]\nend"}],"params":[{"name":"table","types":["String"],"description":"The name of the table in the database to be\nmodified.","optional":false,"nullable":false},{"name":"rows","types":["Array<Hash>"],"description":"One or more hash objects with the hash keys\nmatching the table’s columns, and the hash values matching the\ntable’s values.</p>\n\n<p>Ruby types are mapped to Spanner types as follows:</p>\n\n<table class=\"table\">\n  <thead>\n    <tr>\n      <th>Spanner</th>\n      <th>Ruby</th>\n      <th>Notes</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>BOOL</code></td>\n      <td><code>true</code>/<code>false</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>INT64</code></td>\n      <td><code>Integer</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>FLOAT64</code></td>\n      <td><code>Float</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>STRING</code></td>\n      <td><code>String</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>DATE</code></td>\n      <td><code>Date</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>TIMESTAMP</code></td>\n      <td><code>Time</code>, <code>DateTime</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>BYTES</code></td>\n      <td><code>File</code>, <code>IO</code>, <code>StringIO</code>, or similar</td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>ARRAY</code></td>\n      <td><code>Array</code></td>\n      <td>Nested arrays are not supported.</td>\n    </tr>\n  </tbody>\n</table>","optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"replace-instance","type":"instance","name":"replace","title":["Google","Cloud","Spanner","Commit#replace"],"description":"<p>Inserts or replaces rows in a table. If any of the rows already exist,\nit is deleted, and the column values provided are inserted instead.\nUnlike #upsert, this means any values not explicitly written become\n<code>NULL</code>.</p>","source":"google-cloud-spanner/lib/google/cloud/spanner/commit.rb#L237","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/spanner\"\n\nspanner = Google::Cloud::Spanner.new\n\ndb = spanner.client \"my-instance\", \"my-database\"\n\ndb.commit do |c|\n  c.replace \"users\", [{ id: 1, name: \"Charlie\", active: false },\n                     { id: 2, name: \"Harvey\",  active: true }]\nend"}],"params":[{"name":"table","types":["String"],"description":"The name of the table in the database to be\nmodified.","optional":false,"nullable":false},{"name":"rows","types":["Array<Hash>"],"description":"One or more hash objects with the hash keys\nmatching the table’s columns, and the hash values matching the\ntable’s values.</p>\n\n<p>Ruby types are mapped to Spanner types as follows:</p>\n\n<table class=\"table\">\n  <thead>\n    <tr>\n      <th>Spanner</th>\n      <th>Ruby</th>\n      <th>Notes</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>BOOL</code></td>\n      <td><code>true</code>/<code>false</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>INT64</code></td>\n      <td><code>Integer</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>FLOAT64</code></td>\n      <td><code>Float</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>STRING</code></td>\n      <td><code>String</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>DATE</code></td>\n      <td><code>Date</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>TIMESTAMP</code></td>\n      <td><code>Time</code>, <code>DateTime</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>BYTES</code></td>\n      <td><code>File</code>, <code>IO</code>, <code>StringIO</code>, or similar</td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>ARRAY</code></td>\n      <td><code>Array</code></td>\n      <td>Nested arrays are not supported.</td>\n    </tr>\n  </tbody>\n</table>","optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"delete-instance","type":"instance","name":"delete","title":["Google","Cloud","Spanner","Commit#delete"],"description":"","source":"google-cloud-spanner/lib/google/cloud/spanner/commit.rb#L275","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[]}]}