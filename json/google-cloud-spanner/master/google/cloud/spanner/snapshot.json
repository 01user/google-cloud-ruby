{"id":"google/cloud/spanner/snapshot","name":"Snapshot","title":["Google","Cloud","Spanner","Snapshot"],"description":"<h1 id=\"snapshot\">Snapshot</h1>\n\n<p>A snapshot in Cloud Spanner is a set of reads that execute atomically at\na single logical point in time across columns, rows, and tables in a\ndatabase.</p>","source":"google-cloud-spanner/lib/google/cloud/spanner/snapshot.rb#L42","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/spanner\"\n\nspanner = Google::Cloud::Spanner.new\ndb = spanner.client \"my-instance\", \"my-database\"\n\ndb.snapshot do |snp|\n  results = snp.execute \"SELECT * FROM users\"\n\n  results.rows.each do |row|\n    puts \"User #{row[:id]} is #{row[:name]}\"\"\n  end\nend"}],"methods":[{"id":"execute-instance","type":"instance","name":"execute","title":["Google","Cloud","Spanner","Snapshot#execute"],"description":"<p>Executes a SQL query.</p>\n\n<p>Arguments can be passed using <code>params</code>, Ruby types are mapped to\nSpanner types as follows:</p>\n\n<table class=\"table\">\n  <thead>\n    <tr>\n      <th>Spanner</th>\n      <th>Ruby</th>\n      <th>Notes</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>BOOL</code></td>\n      <td><code>true</code>/<code>false</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>INT64</code></td>\n      <td><code>Integer</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>FLOAT64</code></td>\n      <td><code>Float</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>STRING</code></td>\n      <td><code>String</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>DATE</code></td>\n      <td><code>Date</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>TIMESTAMP</code></td>\n      <td><code>Time</code>, <code>DateTime</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>BYTES</code></td>\n      <td><code>File</code>, <code>IO</code>, <code>StringIO</code>, or similar</td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>ARRAY</code></td>\n      <td><code>Array</code></td>\n      <td>Nested arrays are not supported.</td>\n    </tr>\n  </tbody>\n</table>\n\n<p>See <a href=\"https://cloud.google.com/spanner/docs/data-definition-language#data_types\">Data\ntypes</a>.</p>\n\n<p>When <code>false</code>, all result are returned in a single reply. This method\n cannot be used to return a result set larger than 10 MiB; if the\n query yields more data than that, the query fails with an error.</p>","source":"google-cloud-spanner/lib/google/cloud/spanner/snapshot.rb#L135","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/spanner\"\n\nspanner = Google::Cloud::Spanner.new\ndb = spanner.client \"my-instance\", \"my-database\"\n\ndb.snapshot do |snp|\n  results = snp.execute \"SELECT * FROM users\"\n\n  results.rows.each do |row|\n    puts \"User #{row[:id]} is #{row[:name]}\"\"\n  end\nend"},{"caption":"<p>Query using query parameters:</p>","code":"require \"google/cloud/spanner\"\n\nspanner = Google::Cloud::Spanner.new\ndb = spanner.client \"my-instance\", \"my-database\"\n\ndb.snapshot do |snp|\n  results = snp.execute \"SELECT * FROM users \" \\\n                        \"WHERE active = @active\",\n                        params: { active: true }\n\n  results.rows.each do |row|\n    puts \"User #{row[:id]} is #{row[:name]}\"\"\n  end\nend"},{"caption":"<p>Query without streaming results:</p>","code":"require \"google/cloud/spanner\"\n\nspanner = Google::Cloud::Spanner.new\ndb = spanner.client \"my-instance\", \"my-database\"\n\ndb.snapshot do |snp|\n  results = snp.execute \"SELECT * FROM users \" \\\n                        \"WHERE id = @user_id\",\n                        params: { user_id: 1 },\n                        streaming: false\n\n  user_row = results.rows.first\n  puts \"User #{user_row[:id]} is #{user_row[:name]}\"\nend"}],"params":[{"name":"sql","types":["String"],"description":"The SQL query string. See <a href=\"https://cloud.google.com/spanner/docs/query-syntax\">Query\nsyntax</a>.</p>\n\n<p>The SQL query string can contain parameter placeholders. A parameter\nplaceholder consists of “@” followed by the parameter name.\nParameter names consist of any combination of letters, numbers, and\nunderscores.","optional":false,"nullable":false},{"name":"params","types":["Hash"],"description":"SQL parameters for the query string. The\nparameter placeholders, minus the “@”, are the the hash keys, and\nthe literal values are the hash values. If the query string contains\nsomething like “WHERE id &gt; @msg_id”, then the params must contain\nsomething like <code>:msg_id -&gt; 1</code>.","optional":true,"default":"nil","nullable":true},{"name":"streaming","types":["Boolean"],"description":"When <code>true</code>, all result are returned as a\nstream. There is no limit on the size of the returned result set.\nHowever, no individual row in the result set can exceed 100 MiB, and\nno column value can exceed 10 MiB.","optional":true,"default":"true","nullable":false}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/cloud/spanner/results\">Google::Cloud::Spanner::Results</a>"],"description":""}]},{"id":"read-instance","type":"instance","name":"read","title":["Google","Cloud","Spanner","Snapshot#read"],"description":"<p>Read rows from a database table, as a simple alternative to\n<a data-custom-type=\"google/cloud/spanner/snapshot\" data-method=\"execute-instance\">#execute</a>.</p>","source":"google-cloud-spanner/lib/google/cloud/spanner/snapshot.rb#L195","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/spanner\"\n\nspanner = Google::Cloud::Spanner.new\ndb = spanner.client \"my-instance\", \"my-database\"\n\ndb.snapshot do |snp|\n  results = snp.read \"users\", [\"id, \"name\"]\n\n  results.rows.each do |row|\n    puts \"User #{row[:id]} is #{row[:name]}\"\"\n  end\nend"},{"caption":"<p>Read without streaming results:</p>","code":"require \"google/cloud/spanner\"\n\nspanner = Google::Cloud::Spanner.new\ndb = spanner.client \"my-instance\", \"my-database\"\n\ndb.snapshot do |snp|\n  results = snp.read \"users\", [\"id, \"name\"], streaming: false\n\n  results.rows.each do |row|\n    puts \"User #{row[:id]} is #{row[:name]}\"\"\n  end\nend"}],"params":[{"name":"table","types":["String"],"description":"The name of the table in the database to be\nread.","optional":false,"nullable":false},{"name":"columns","types":["Array<String>"],"description":"The columns of table to be returned for\neach row matching this request.","optional":false,"nullable":false},{"name":"id","types":["Object","Array<Object>"],"description":"A single, or list of keys to match\nreturned data to. Values should have exactly as many elements as\nthere are columns in the primary key.","optional":true,"default":"nil","nullable":true},{"name":"limit","types":["Integer"],"description":"If greater than zero, no more than this number\nof rows will be returned. The default is no limit.","optional":true,"default":"nil","nullable":true},{"name":"streaming","types":["Boolean"],"description":"When <code>true</code>, all result are returned as a\nstream. There is no limit on the size of the returned result set.\nHowever, no individual row in the result set can exceed 100 MiB, and\nno column value can exceed 10 MiB.","optional":true,"default":"true","nullable":false}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/cloud/spanner/results\">Google::Cloud::Spanner::Results</a>"],"description":""}]}]}