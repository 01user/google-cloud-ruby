{"id":"google/cloud/spanner/transaction","name":"Transaction","title":["Google","Cloud","Spanner","Transaction"],"description":"<h1 id=\"transaction\">Transaction</h1>\n\n<p>A transaction in Cloud Spanner is a set of reads and writes that execute\natomically at a single logical point in time across columns, rows, and\ntables in a database.</p>","source":"google-cloud-spanner/lib/google/cloud/spanner/transaction.rb#L43","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/spanner\"\n\nspanner = Google::Cloud::Spanner.new\ndb = spanner.client \"my-instance\", \"my-database\"\n\ndb.transaction do |tx|\n  results = tx.execute \"SELECT * FROM users\"\n\n  results.rows.each do |row|\n    puts \"User #{row[:id]} is #{row[:name]}\"\"\n  end\nend"}],"methods":[{"id":"execute-instance","type":"instance","name":"execute","title":["Google","Cloud","Spanner","Transaction#execute"],"description":"<p>Executes a SQL query.</p>\n\n<p>Arguments can be passed using <code>params</code>, Ruby types are mapped to\nSpanner types as follows:</p>\n\n<table class=\"table\">\n  <thead>\n    <tr>\n      <th>Spanner</th>\n      <th>Ruby</th>\n      <th>Notes</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>BOOL</code></td>\n      <td><code>true</code>/<code>false</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>INT64</code></td>\n      <td><code>Integer</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>FLOAT64</code></td>\n      <td><code>Float</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>STRING</code></td>\n      <td><code>String</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>DATE</code></td>\n      <td><code>Date</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>TIMESTAMP</code></td>\n      <td><code>Time</code>, <code>DateTime</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>BYTES</code></td>\n      <td><code>File</code>, <code>IO</code>, <code>StringIO</code>, or similar</td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>ARRAY</code></td>\n      <td><code>Array</code></td>\n      <td>Nested arrays are not supported.</td>\n    </tr>\n  </tbody>\n</table>\n\n<p>See <a href=\"https://cloud.google.com/spanner/docs/data-definition-language#data_types\">Data\ntypes</a>.</p>\n\n<p>When <code>false</code>, all result are returned in a single reply. This method\n cannot be used to return a result set larger than 10 MiB; if the\n query yields more data than that, the query fails with an error.</p>","source":"google-cloud-spanner/lib/google/cloud/spanner/transaction.rb#L134","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/spanner\"\n\nspanner = Google::Cloud::Spanner.new\ndb = spanner.client \"my-instance\", \"my-database\"\n\ndb.transaction do |tx|\n  results = tx.execute \"SELECT * FROM users\"\n\n  results.rows.each do |row|\n    puts \"User #{row[:id]} is #{row[:name]}\"\"\n  end\nend"},{"caption":"<p>Query using query parameters:</p>","code":"require \"google/cloud/spanner\"\n\nspanner = Google::Cloud::Spanner.new\ndb = spanner.client \"my-instance\", \"my-database\"\n\ndb.transaction do |tx|\n  results = tx.execute \"SELECT * FROM users WHERE active = @active\",\n                       params: { active: true }\n\n  results.rows.each do |row|\n    puts \"User #{row[:id]} is #{row[:name]}\"\"\n  end\nend"},{"caption":"<p>Query without streaming results:</p>","code":"require \"google/cloud/spanner\"\n\nspanner = Google::Cloud::Spanner.new\ndb = spanner.client \"my-instance\", \"my-database\"\n\ndb.transaction do |tx|\n  results = tx.execute \"SELECT * FROM users WHERE id = @user_id\",\n                       params: { user_id: 1 },\n                       streaming: false\n\n  user_row = results.rows.first\n  puts \"User #{user_row[:id]} is #{user_row[:name]}\"\nend"}],"params":[{"name":"sql","types":["String"],"description":"The SQL query string. See <a href=\"https://cloud.google.com/spanner/docs/query-syntax\">Query\nsyntax</a>.</p>\n\n<p>The SQL query string can contain parameter placeholders. A parameter\nplaceholder consists of “@” followed by the parameter name.\nParameter names consist of any combination of letters, numbers, and\nunderscores.","optional":false,"nullable":false},{"name":"params","types":["Hash"],"description":"SQL parameters for the query string. The\nparameter placeholders, minus the “@”, are the the hash keys, and\nthe literal values are the hash values. If the query string contains\nsomething like “WHERE id &gt; @msg_id”, then the params must contain\nsomething like <code>:msg_id -&gt; 1</code>.","optional":true,"default":"nil","nullable":true},{"name":"streaming","types":["Boolean"],"description":"When <code>true</code>, all result are returned as a\nstream. There is no limit on the size of the returned result set.\nHowever, no individual row in the result set can exceed 100 MiB, and\nno column value can exceed 10 MiB.","optional":true,"default":"true","nullable":false}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/cloud/spanner/results\">Google::Cloud::Spanner::Results</a>"],"description":""}]},{"id":"read-instance","type":"instance","name":"read","title":["Google","Cloud","Spanner","Transaction#read"],"description":"<p>Read rows from a database table, as a simple alternative to\n<a data-custom-type=\"google/cloud/spanner/transaction\" data-method=\"execute-instance\">#execute</a>.</p>","source":"google-cloud-spanner/lib/google/cloud/spanner/transaction.rb#L189","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/spanner\"\n\nspanner = Google::Cloud::Spanner.new\ndb = spanner.client \"my-instance\", \"my-database\"\n\ndb.transaction do |tx|\n  results = tx.read \"users\", [\"id, \"name\"]\n\n  results.rows.each do |row|\n    puts \"User #{row[:id]} is #{row[:name]}\"\"\n  end\nend"},{"caption":"<p>Read without streaming results:</p>","code":"require \"google/cloud/spanner\"\n\nspanner = Google::Cloud::Spanner.new\ndb = spanner.client \"my-instance\", \"my-database\"\n\ndb.transaction do |tx|\n  results = tx.read \"users\", [\"id, \"name\"], streaming: false\n\n  results.rows.each do |row|\n    puts \"User #{row[:id]} is #{row[:name]}\"\"\n  end\nend"}],"params":[{"name":"table","types":["String"],"description":"The name of the table in the database to be\nread.","optional":false,"nullable":false},{"name":"columns","types":["Array<String>"],"description":"The columns of table to be returned for\neach row matching this request.","optional":false,"nullable":false},{"name":"id","types":["Object","Array<Object>"],"description":"A single, or list of keys to match\nreturned data to. Values should have exactly as many elements as\nthere are columns in the primary key.","optional":true,"default":"nil","nullable":true},{"name":"limit","types":["Integer"],"description":"If greater than zero, no more than this number\nof rows will be returned. The default is no limit.","optional":true,"default":"nil","nullable":true},{"name":"streaming","types":["Boolean"],"description":"When <code>true</code>, all result are returned as a\nstream. There is no limit on the size of the returned result set.\nHowever, no individual row in the result set can exceed 100 MiB, and\nno column value can exceed 10 MiB.","optional":true,"default":"true","nullable":false}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/cloud/spanner/results\">Google::Cloud::Spanner::Results</a>"],"description":""}]},{"id":"commit-instance","type":"instance","name":"commit","title":["Google","Cloud","Spanner","Transaction#commit"],"description":"<p>Creates changes to be applied to rows in the database.</p>","source":"google-cloud-spanner/lib/google/cloud/spanner/transaction.rb#L214","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/spanner\"\n\nspanner = Google::Cloud::Spanner.new\ndb = spanner.client \"my-instance\", \"my-database\"\n\ndb.transaction do |tx|\n  tx.commit do |c|\n    c.update \"users\", [{ id: 1, name: \"Charlie\", active: false }]\n    c.insert \"users\", [{ id: 2, name: \"Harvey\",  active: true }]\n  end\nend"}],"params":[{"name":"yield","types":["block"],"description":"The block for updating the data.","optional":true,"nullable":false},{"name":"yield.commit","types":["Google::Cloud::Spanner::Commit"],"description":"The Commit object.","optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"upsert-instance","type":"instance","name":"upsert","title":["Google","Cloud","Spanner","Transaction#upsert"],"description":"<p>Inserts or updates rows in a table. If any of the rows already exist,\nthen its column values are overwritten with the ones provided. Any\ncolumn values not explicitly written are preserved.</p>","source":"google-cloud-spanner/lib/google/cloud/spanner/transaction.rb#L256","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/spanner\"\n\nspanner = Google::Cloud::Spanner.new\ndb = spanner.client \"my-instance\", \"my-database\"\n\ndb.transaction do |tx|\n  tx.upsert \"users\", [{ id: 1, name: \"Charlie\", active: false },\n                      { id: 2, name: \"Harvey\",  active: true }]\nend"}],"params":[{"name":"table","types":["String"],"description":"The name of the table in the database to be\nmodified.","optional":false,"nullable":false},{"name":"rows","types":["Array<Hash>"],"description":"One or more hash objects with the hash keys\nmatching the table’s columns, and the hash values matching the\ntable’s values.</p>\n\n<p>Ruby types are mapped to Spanner types as follows:</p>\n\n<table class=\"table\">\n  <thead>\n    <tr>\n      <th>Spanner</th>\n      <th>Ruby</th>\n      <th>Notes</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>BOOL</code></td>\n      <td><code>true</code>/<code>false</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>INT64</code></td>\n      <td><code>Integer</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>FLOAT64</code></td>\n      <td><code>Float</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>STRING</code></td>\n      <td><code>String</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>DATE</code></td>\n      <td><code>Date</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>TIMESTAMP</code></td>\n      <td><code>Time</code>, <code>DateTime</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>BYTES</code></td>\n      <td><code>File</code>, <code>IO</code>, <code>StringIO</code>, or similar</td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>ARRAY</code></td>\n      <td><code>Array</code></td>\n      <td>Nested arrays are not supported.</td>\n    </tr>\n  </tbody>\n</table>","optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"insert-instance","type":"instance","name":"insert","title":["Google","Cloud","Spanner","Transaction#insert"],"description":"<p>Inserts new rows in a table. If any of the rows already exist, the\nwrite or request fails with error <code>ALREADY_EXISTS</code>.</p>","source":"google-cloud-spanner/lib/google/cloud/spanner/transaction.rb#L296","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/spanner\"\n\nspanner = Google::Cloud::Spanner.new\ndb = spanner.client \"my-instance\", \"my-database\"\n\ndb.transaction do |tx|\n  tx.insert \"users\", [{ id: 1, name: \"Charlie\", active: false },\n                      { id: 2, name: \"Harvey\",  active: true }]\nend"}],"params":[{"name":"table","types":["String"],"description":"The name of the table in the database to be\nmodified.","optional":false,"nullable":false},{"name":"rows","types":["Array<Hash>"],"description":"One or more hash objects with the hash keys\nmatching the table’s columns, and the hash values matching the\ntable’s values.</p>\n\n<p>Ruby types are mapped to Spanner types as follows:</p>\n\n<table class=\"table\">\n  <thead>\n    <tr>\n      <th>Spanner</th>\n      <th>Ruby</th>\n      <th>Notes</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>BOOL</code></td>\n      <td><code>true</code>/<code>false</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>INT64</code></td>\n      <td><code>Integer</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>FLOAT64</code></td>\n      <td><code>Float</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>STRING</code></td>\n      <td><code>String</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>DATE</code></td>\n      <td><code>Date</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>TIMESTAMP</code></td>\n      <td><code>Time</code>, <code>DateTime</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>BYTES</code></td>\n      <td><code>File</code>, <code>IO</code>, <code>StringIO</code>, or similar</td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>ARRAY</code></td>\n      <td><code>Array</code></td>\n      <td>Nested arrays are not supported.</td>\n    </tr>\n  </tbody>\n</table>","optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"update-instance","type":"instance","name":"update","title":["Google","Cloud","Spanner","Transaction#update"],"description":"<p>Updates existing rows in a table. If any of the rows does not already\nexist, the request fails with error <code>NOT_FOUND</code>.</p>","source":"google-cloud-spanner/lib/google/cloud/spanner/transaction.rb#L335","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/spanner\"\n\nspanner = Google::Cloud::Spanner.new\ndb = spanner.client \"my-instance\", \"my-database\"\n\ndb.transaction do |tx|\n  tx.update \"users\", [{ id: 1, name: \"Charlie\", active: false },\n                      { id: 2, name: \"Harvey\",  active: true }]\nend"}],"params":[{"name":"table","types":["String"],"description":"The name of the table in the database to be\nmodified.","optional":false,"nullable":false},{"name":"rows","types":["Array<Hash>"],"description":"One or more hash objects with the hash keys\nmatching the table’s columns, and the hash values matching the\ntable’s values.</p>\n\n<p>Ruby types are mapped to Spanner types as follows:</p>\n\n<table class=\"table\">\n  <thead>\n    <tr>\n      <th>Spanner</th>\n      <th>Ruby</th>\n      <th>Notes</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>BOOL</code></td>\n      <td><code>true</code>/<code>false</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>INT64</code></td>\n      <td><code>Integer</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>FLOAT64</code></td>\n      <td><code>Float</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>STRING</code></td>\n      <td><code>String</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>DATE</code></td>\n      <td><code>Date</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>TIMESTAMP</code></td>\n      <td><code>Time</code>, <code>DateTime</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>BYTES</code></td>\n      <td><code>File</code>, <code>IO</code>, <code>StringIO</code>, or similar</td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>ARRAY</code></td>\n      <td><code>Array</code></td>\n      <td>Nested arrays are not supported.</td>\n    </tr>\n  </tbody>\n</table>","optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"replace-instance","type":"instance","name":"replace","title":["Google","Cloud","Spanner","Transaction#replace"],"description":"<p>Inserts or replaces rows in a table. If any of the rows already exist,\nit is deleted, and the column values provided are inserted instead.\nUnlike #upsert, this means any values not explicitly written become\n<code>NULL</code>.</p>","source":"google-cloud-spanner/lib/google/cloud/spanner/transaction.rb#L376","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/spanner\"\n\nspanner = Google::Cloud::Spanner.new\ndb = spanner.client \"my-instance\", \"my-database\"\n\ndb.transaction do |tx|\n  tx.replace \"users\", [{ id: 1, name: \"Charlie\", active: false },\n                       { id: 2, name: \"Harvey\",  active: true }]\nend"}],"params":[{"name":"table","types":["String"],"description":"The name of the table in the database to be\nmodified.","optional":false,"nullable":false},{"name":"rows","types":["Array<Hash>"],"description":"One or more hash objects with the hash keys\nmatching the table’s columns, and the hash values matching the\ntable’s values.</p>\n\n<p>Ruby types are mapped to Spanner types as follows:</p>\n\n<table class=\"table\">\n  <thead>\n    <tr>\n      <th>Spanner</th>\n      <th>Ruby</th>\n      <th>Notes</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>BOOL</code></td>\n      <td><code>true</code>/<code>false</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>INT64</code></td>\n      <td><code>Integer</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>FLOAT64</code></td>\n      <td><code>Float</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>STRING</code></td>\n      <td><code>String</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>DATE</code></td>\n      <td><code>Date</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>TIMESTAMP</code></td>\n      <td><code>Time</code>, <code>DateTime</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>BYTES</code></td>\n      <td><code>File</code>, <code>IO</code>, <code>StringIO</code>, or similar</td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>ARRAY</code></td>\n      <td><code>Array</code></td>\n      <td>Nested arrays are not supported.</td>\n    </tr>\n  </tbody>\n</table>","optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"delete-instance","type":"instance","name":"delete","title":["Google","Cloud","Spanner","Transaction#delete"],"description":"<p>Deletes rows from a table. Succeeds whether or not the specified rows\nwere present.</p>","source":"google-cloud-spanner/lib/google/cloud/spanner/transaction.rb#L398","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/spanner\"\n\nspanner = Google::Cloud::Spanner.new\ndb = spanner.client \"my-instance\", \"my-database\"\n\ndb.transaction { |tx| tx.delete \"users\", [1, 2, 3] }"}],"params":[{"name":"table","types":["String"],"description":"The name of the table in the database to be\nmodified.","optional":false,"nullable":false},{"name":"id","types":["Array<Object>"],"description":"One or more primary keys of the rows within\ntable to delete.","optional":false,"nullable":false}],"exceptions":[],"returns":[]}]}